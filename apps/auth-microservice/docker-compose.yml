version: '3.8'

services:
  auth-postgres:
    image: postgres:13
    container_name: auth-postgres
    environment:
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_POSTGRES_DB}
    ports:
      - "${AUTH_POSTGRES_PORT:-5433}:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: auth-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${AUTH_MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${AUTH_MONGO_ROOT_PASSWORD}
    ports:
      - "${AUTH_MONGO_PORT:-27017}:27017"
    networks:
      - microservices-network
  auth-microservice:
    build:
      context: ../../
      dockerfile: apps/auth-microservice/Dockerfile
    container_name: auth-microservice
    ports:
      - "${AUTH_SERVICE_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - POSTGRES_HOST=auth-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${AUTH_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AUTH_POSTGRES_PASSWORD}
      - POSTGRES_DB=${AUTH_POSTGRES_DB}
      - MONGODB_URL=mongodb://${AUTH_MONGO_ROOT_USER}:${AUTH_MONGO_ROOT_PASSWORD}@auth-mongo:27017
      - MONGODB_DB_NAME=${AUTH_MONGO_DB_NAME}
      - JWT_SECRET=${AUTH_JWT_SECRET}
      - JWT_EXPIRES_IN=${AUTH_JWT_EXPIRES_IN}
    volumes:
      - ../../apps/auth-microservice/src:/app/apps/auth-microservice/src
      - ../../node_modules:/app/node_modules
    networks:
      - microservices-network
    depends_on:
      - auth-postgres
    restart: unless-stopped
    env_file:
      - .env

volumes:
  auth_postgres_data:

networks:
  microservices-network:
    external: true