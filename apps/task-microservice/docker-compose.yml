version: '3.8'

services:
  task-postgres:
    image: postgres:13
    container_name: task-postgres
    environment:
      POSTGRES_USER: ${TASK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TASK_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TASK_POSTGRES_DB}
    ports:
      - "${TASK_POSTGRES_PORT:-5434}:5432"
    volumes:
      - task_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: task-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${TASK_MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${TASK_MONGO_ROOT_PASSWORD}
    ports:
      - "${TASK_MONGO_PORT:-27018}:27017"
    networks:
      - microservices-network
  task-microservice:
    build:
      context: ../../
      dockerfile: apps/task-microservice/Dockerfile
    container_name: task-microservice
    ports:
      - "${TASK_SERVICE_PORT:-3002}:3002"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3002
      - POSTGRES_HOST=task-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${TASK_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TASK_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TASK_POSTGRES_DB}
      - MONGODB_URL=mongodb://${TASK_MONGO_ROOT_USER}:${TASK_MONGO_ROOT_PASSWORD}@localhost:27017
      - MONGODB_DB_NAME=${TASK_MONGO_DB_NAME}
      - JWT_SECRET=${TASK_JWT_SECRET}
      - JWT_EXPIRES_IN=${TASK_JWT_EXPIRES_IN}
    volumes:
      - ../../apps/task-microservice/src:/app/apps/task-microservice/src
      - ../../node_modules:/app/node_modules
    networks:
      - microservices-network
    depends_on:
      - task-postgres
    restart: unless-stopped
    env_file:
      - ../../.env

volumes:
  task_postgres_data:

networks:
  microservices-network:
    external: true